// Mocks generated by Mockito 5.4.4 from annotations
// in agenda_pet/test/data/repositories/pet_repository_impl_test.mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:agenda_pet/data/datasources/local_db.dart' as _i3;
import 'package:agenda_pet/data/models/appointment_model.dart' as _i6;
import 'package:agenda_pet/data/models/pet_model.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LocalDB].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDB extends _i1.Mock implements _i3.LocalDB {
  MockLocalDB() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Database> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i4.Future<_i2.Database>.value(_FakeDatabase_0(
          this,
          Invocation.getter(#database),
        )),
      ) as _i4.Future<_i2.Database>);

  @override
  _i4.Future<int> insertPet(_i5.PetModel? pet) => (super.noSuchMethod(
        Invocation.method(
          #insertPet,
          [pet],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<int> insertAppointment(_i6.AppointmentModel? appointment) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertAppointment,
          [appointment],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<List<_i5.PetModel>> getPets() => (super.noSuchMethod(
        Invocation.method(
          #getPets,
          [],
        ),
        returnValue: _i4.Future<List<_i5.PetModel>>.value(<_i5.PetModel>[]),
      ) as _i4.Future<List<_i5.PetModel>>);

  @override
  _i4.Future<List<_i6.AppointmentModel>> getAppointments() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAppointments,
          [],
        ),
        returnValue: _i4.Future<List<_i6.AppointmentModel>>.value(
            <_i6.AppointmentModel>[]),
      ) as _i4.Future<List<_i6.AppointmentModel>>);
}
